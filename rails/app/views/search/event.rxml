xml.div({:id=>:data}) do
  xml << js_tabs([:simple,:advanced])

  xml.fieldset({:id=>'content-simple'}) do
    xml.label(local('find_event'))
    xml.form(:id=>:simple_search,:action=>url_for) do
      xml.input({:type=>:text,:name=>:search_event_simple,:id=>:search_event_simple,:value=>@preferences[:search_event_simple]})
      xml.label("Searching ...", {:id=>"search-indicator",:style=>"display:none"})
    end
  end

  categories = [
    [:title,local('event::title'),:text],
    [:description,local('event::description'),:text],
    [:public,local('event::public'),:list,[['t','yes'],['f','no']]],
    [:duration,local('event::duration'),:list,View_event_duration.select.map(&:duration)],
    [:language,local('event::language'),:list, View_conference_language.select({:translated=>@current_language,:conference_id=>@current_conference.conference_id},{:order=>:name}).map{|l| [l.language, l.name]}, {:with_empty=>true} ],
    [:event_origin,local('event::event_origin'),:list, Event_origin_localized.select({:translated=>@current_language}).map{|o| [o.event_origin, o.name]}],
    [:event_state,local('event::event_state'),:list, Event_state_localized.select({:translated=>@current_language}).map{|o| [o.event_state, o.name]} ],
    [:event_state_progress,local('event::event_state_progress'),:list, Event_state_progress.select({},{:order=>[:event_state,:event_state_progress]}).map{|o| "#{o.event_state} #{o.event_state_progress}"} ],
    [:event_type,local('event::event_type'),:list, Event_type_localized.select({:translated=>@current_language}).map{|o| [o.event_type, o.name]}, {:with_empty=>true} ],
    [:conference_track_id,local('conference_track'),:list, @current_conference.tracks.map{|t| [t.conference_track_id,t.conference_track]}, {:with_empty=>true} ],
    [:conference_room_id ,local('conference_room'),:list, @current_conference.rooms.map{|r| [r.conference_room_id, r.conference_room]}, {:with_empty=>true} ],
    [:coordinators,local('coordinators'),:list, View_event_person.select({:event_role=>'coordinator',:conference_id=>@current_conference.conference_id},{:distinct=>[:name,:person_id]}).map{|p| [p.person_id,p.name]} ],
    [:hosts,local('hosts'),:list, View_event_person.select({:event_role=>['host'],:conference_id=>@current_conference.conference_id},{:distinct=>[:name,:person_id]}).map{|p| [p.person_id,p.name]} ],
    [:speakers,local('speakers'),:list, View_event_person.select({:event_role=>['speaker','moderator'],:conference_id=>@current_conference.conference_id},{:distinct=>[:name,:person_id]}).map{|p| [p.person_id,p.name]} ]
  ]

  xml.fieldset({:id=>'content-advanced'}) do
    xml.label(local('find_event'))

    # template used for constructing advanced search rows
    xml.ul({:id=>:search_content,:style=>"display:none"}) do

      categories.each do | category |
        xml.li({:class=>category[0],:title=>category[1]}) do
          xml.input({:type=>:hidden,:name=>'search_event[row_id][key]',:value=>category[0]})
          xml.input({:type=>:hidden,:name=>'search_event[row_id][type]',:value=>category[2]})
          case category[2]
            when :text 
              xml.input({:type=>:text,:name=>'search_event[row_id][value]'})
            when :list
              xml << select_tag('search_event[row_id][value]', category[3], category[4] || {} )
            else
              raise "Unknown search type"
          end
        end
      end

    end

    xml.ul({:id=>:search_template,:style=>"display:none"}) do
      xml.li do
        xml.img({:onclick=>'search_row_add(this)',:src=>'/images/icon-plus-16x16.png'})
        xml.img({:onclick=>'search_row_remove(this)',:src=>'/images/icon-minus-16x16.png'})
        xml.select(nil,{:onchange=>'search_row_change(this)'})
        xml.span(nil,:class=>:dynamic)
      end
    end

    xml.form(:id=>:advanced_search,:action=>url_for) do
      xml.ul( nil, {:id=>:advanced_search_list,:class=>"advanced_search"} )

      xml.label("Searching ...", {:id=>"search-indicator",:style=>"display:none"})

    end

  end

  xml.fieldset do
    xml.div({:id=>:results})
  end
end


xml.script(:type=>'text/javascript') do
  xml.text! "init_search_list('advanced_search_list');"
  if @preferences[:search_event_advanced] && @preferences[:search_event_advanced].length > 0
    @preferences[:search_event_advanced].each do | key, row |
      xml << js_function('search_row_add', nil, row[:key], row[:value])
    end
  else
    xml.text! "search_row_add();"
  end
  xml.text! <<-JS
    switch_tab();
    new Form.Observer('advanced_search', 1, function(element, value) { new Ajax.Updater('results', '#{url_for(:action=>:search_event_advanced)}', { asynchronous:true, evalScripts:false, onComplete:function(request){Element.hide('search-indicator');sortables_init()}, onLoading:function(request){Element.show('search-indicator')}, parameters:value });});
    new Form.Observer('simple_search', 1, function(element, value) { new Ajax.Updater('results', '#{url_for(:action=>:search_event_simple)}', { asynchronous:true, evalScripts:false, onComplete:function(request){Element.hide('search-indicator');sortables_init()}, onLoading:function(request){Element.show('search-indicator')}, parameters:value });});
    if ( $('content-simple').visible() )
      new Ajax.Updater('results', '#{url_for(:action=>:search_event_simple)}', { asynchronous:true, evalScripts:false, onComplete:function(request){Element.hide('search-indicator');sortables_init()}, onLoading:function(request){Element.show('search-indicator')},parameters:$('simple_search').serialize()});
    else
      new Ajax.Updater('results', '#{url_for(:action=>:search_event_advanced)}', { asynchronous:true, evalScripts:false, onComplete:function(request){Element.hide('search-indicator');sortables_init()}, onLoading:function(request){Element.show('search-indicator')},parameters:$('advanced_search').serialize()});

JS
end


