xml.div(:id=>:data) do

  xml.form(:id=>:review_filter,:action=>url_for) do
  xml.fieldset do
    xml.legend("Review track")
    xml << select_tag('conference_track_id', @current_conference.tracks({},{:order=>:conference_track}).map{|t|
      [t.conference_track_id, t.conference_track]}, {:with_empty=>true})
  end
  xml.fieldset do
    xml.legend("Report options")
    xml.input({:type=>:checkbox,:name=>'exclude_rated_by_me'})
    xml.text "Exclude submissions rated by me"
    xml.br
    xml.input({:type=>:checkbox,:name=>'exclude_rejected'})
    xml.text "Exclude rejected submissions"
  end
  end

  xml.fieldset do
    xml.legend("Submissions")
    xml.label("Searching ...", {:id=>"search-indicator",:style=>"display:none"})
    xml.div({:id=>:review_table})
  end
end

xml.script(:type=>'text/javascript') do
  xml.text! <<-JS
    new Form.Observer('review_filter', 1, function(element, value) { new Ajax.Updater('review_table', '#{url_for(:action=>:review_filter)}', { asynchronous:true, evalScripts:false, onComplete:function(request){Element.hide('search-indicator');sortables_init()}, onLoading:function(request){Element.show('search-indicator')}, parameters:value });});
    new Ajax.Updater('review_table', '#{url_for(:action=>:review_filter)}', { asynchronous:true, evalScripts:false, onComplete:function(request){Element.hide('search-indicator');sortables_init()}, onLoading:function(request){Element.show('search-indicator')},parameters:$('review_filter').serialize()});
  JS
end
