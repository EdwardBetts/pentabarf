xml.div(:id=>'content-general') do

  xml.fieldset do
    xml.img( :src=>url_for(:controller=>'image',:action=>:person,:id=>@person.person_id,:size=>'128x128'),:style=>'float: right;')
    xml.legend local('person::tab::general')
    xml.p do
      xml.text "Please click through the tabs above or use 'Show all' and complete the relevant information. Then press the 'Save' button that will appear on the bottom right when anything is changed."
      xml.text "The button saves changes made across all the tabs together - you only need to use it once after editing all the tabs but if you are entering a lot of text you might prefer to save multiple times as you go along. As soon as the data is saved into the database, reviewers can see it. You can update it at any point."
      xml.text "(Note that some browsers auto-fill the password box on the Account tab even when you haven't viewed that tab and this may lead to confusing behaviour.)"
    end
    xml.p do
      xml.text "Please also upload a photograph of yourself.  The image gets converted to 220 pixels (horizontal) by 180 pixels (vertical)."
    end
    xml.p do
      xml.text "Nickname is optional. If you supply one, it gets published as part of your name in the form 'FirstName LastName (Nickname)'."
    end

    xml.table do
      xml << text_field_row( @person, :first_name )
      xml << text_field_row( @person, :last_name )
      xml << text_field_row( @person, :nickname )
      xml << file_row( :person_image, :image )
      xml << check_box_row( @person_image, :public )
      xml << check_box_row( :person_image, :remove )
      xml << check_box_row( @conference_person, :reconfirmed ) if @conference.f_reconfirmation_enabled
    end
  end

  custom_fields_conference_person = Custom_fields.select(:table_name=>:conference_person,:submission_visible=>true)
  custom_fields_person = Custom_fields.select(:table_name=>:person,:submission_visible=>true)
  xml.fieldset do
    xml.legend local('custom_fields')
    xml.table do
      custom = Custom_person.select_or_new({:person_id=>@person.person_id.to_i})
      custom_fields_person.each do | field |
        opts = {}
        opts[:disabled] = :disabled if field.submission_settable == false
        xml << custom_field_row( field, custom, opts )
      end
      custom = Custom_conference_person.select_or_new({:person_id=>@person.person_id,:conference_id=>@current_conference.conference_id})
      custom_fields_conference_person.each do | field |
        opts = {}
        opts[:disabled] = :disabled if field.submission_settable == false
        xml << custom_field_row( field, custom, opts )
      end
    end
  end if custom_fields_conference_person.length > 0 || custom_fields_person.length > 0

end
