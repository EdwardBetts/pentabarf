xml.div(:id=>'content-general') do

  xml.fieldset do
    xml.legend local('event::tab::general')

    xml.p do
      xml.text "The Event title is sometimes shown on its own and needs to be short and concise.  It needs to convey sufficient information to attract the audience you are aiming for."
      xml.text "Subtitle is optional."
    end

    xml.p do
      xml.text "Please only submit a particular proposal once and select the track that you think is most appropriate.  Each track is reviewed by a separate team. They will work together to transfer content to alternative tracks where appropriate, but if there is an alternative track that you would particularly like to consider your talk if the first track rejects it, then please do mention that in the Submission Notes box.  If your proposal is for a full-length presentation but you would also like to offer a 15-minute Lightning Talk if it is rejected, please also mention that in the Submission Notes box."
    end

    xml.table do
      xml << text_field_row( @event, :title )
      xml << text_field_row( @event, :subtitle )
      xml.tr do
        xml.td do xml.b( local('event::event_state')) end
        xml.td( @event.event_state )
      end
      xml.tr do
        xml.td do xml.b( local('event::event_state_progress')) end
        xml.td( @event.event_state_progress )
      end
      tracks = @conference.tracks.map{|t| [t.conference_track_id,t.conference_track]}
      if not tracks.empty?
      xml << select_row( @event, :conference_track_id, tracks,{:with_empty=>true})
      end
      xml << select_row( @event, :event_type, Event_type_localized.select({:translated=>@current_language},{:order=>:name}).map{|e| [e.event_type,e.name]}, {:with_empty=>true} )
      xml << file_row( :event_image, :image )
      xml << check_box_row( :event_image, :remove )
    end
  end

  custom = Custom_event.select_or_new({:event_id=>@event.event_id.to_i})
  custom_fields = Custom_fields.select(:table_name=>:event,:submission_visible=>true)
  xml.fieldset do
    xml.legend local('custom_fields')
    xml.table do
      custom_fields.each do | field |
        opts = {}
        opts[:disabled] = :disabled if field.submission_settable == false
        xml << custom_field_row( field, custom, opts )
      end
    end
  end unless custom_fields.empty?

  xml << text_area_fieldset( @event, :licence, {:rows=>2,
        :hint=>"If your presentation concerns specific software projects, please indicate the main software licence(s) that they use.  E.g. GPLv3."} )

  xml.fieldset do
    xml.legend local('event::tab::schedule')

    xml.p do
      xml.text "The Duration is the proposed length of your session in the live stream combining both pre-recorded talk and a short amount of live Q&A.  The presentation length is the length of the pre-recorded talk, which will be updated to the exact length when the video is ready.  Extended Q&A will be offered for those who wish to take part outside the live stream as interaction forms an important part of FOSDEM.  Please refer to the Call for Papers for the particular track to check for any additional guidance."
    end

    xml.table do
      xml.tr do
        xml.td do xml.b( local('event::conference_day')) end
        xml.td do
          if @event.conference_day_id
            day = @event.conference_day
            xml.text! "#{day.name} #{day.conference_day}"
          end
        end
      end
      xml.tr do
        xml.td do xml.b( local('event::start_time')) end
        if @event.start_time
          xml.td( @event.start_time + @conference.day_change.strftime("%H").to_i*3600 )
        else
          xml.td
        end
      end

      d = []
      slot_seconds = @conference.timeslot_duration.to_i
      @conference.max_timeslot_duration.times do | i |
        current = slot_seconds * ( i + 1 )
        d << sprintf("%02d:%02d:%02d", current/3600, (current/60)%60 , current%60)
      end
      @event.duration = d[@conference.default_timeslots - 1] if not @event.duration
      xml << select_row( @event, :duration, d, {:selected=>@event.duration.strftime('%H:%M:%S')} )

      xml << text_field_row( @event, :presentation_length, {:size=>8} )

      if @event.event_state == 'accepted' && @event.sreview_upload_url && @event.prerecorded
        xml.tr do
          xml.td do xml.b( local('event::sreview_upload_url')) end
          xml.td do
            xml.a("Upload", {:href=>@event.sreview_upload_url})
          end
        end
      end

      if @event.event_state == 'accepted' && @event.sreview_review_url && @event.prerecorded
        xml.tr do
          xml.td do xml.b( local('event::sreview_review_url')) end
          xml.td do
            xml.a("Review", {:href=>@event.sreview_review_url})
          end
        end
      end

      if @event.event_state == 'accepted' && @event.final_video_url && @event.prerecorded
        xml.tr do
          xml.td do xml.b( local('event::final_video_url')) end
          xml.td do
            xml.a("Final Version", {:href=>@event.final_video_url})
          end
        end
      end

      xml.tr do
        xml.td do xml.b( local('event::conference_room')) end
        xml.td do
          xml.text! Conference_room.select_single({:conference_room_id=>@event.conference_room_id}).conference_room if @event.conference_room_id
        end
      end
    end
  end
end
